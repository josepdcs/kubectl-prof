name: Do Release
on:
  push:
    tags:
      - '*.*.*'
  workflow_dispatch:
    inputs:
      VERSION:
        description: 'The release version to publish'
        required: true
        default: ''

env:
  SCM_USERNAME: josepdcs

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Read tag from pushed tag
        if: github.event_name == 'push'
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Read tag from version to publish
        if: github.event_name == 'workflow_dispatch'
        run: echo "tag=${{ github.event.inputs.VERSION }}" >> $GITHUB_ENV

      - name: Set Git Tag for workflow dispatched
        if: github.event_name == 'workflow_dispatch'
        run: |
          git config user.name "$SCM_USERNAME"
          git tag ${{ env.tag }} -m "Release ${{ env.tag }}"
          git push origin ${{ env.tag }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and Push JVM Agent Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: 'docker/jvm/Dockerfile'
          push: true
          tags: |
            josepdcs/kubectl-prof:${{ env.tag }}-jvm
            ghcr.io/josepdcs/kubectl-prof:${{ env.tag }}-jvm

      - name: Build and Push JVM Alpine Agent Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: 'docker/jvm/alpine/Dockerfile'
          push: true
          tags: |
            josepdcs/kubectl-prof:${{ env.tag }}-jvm-alpine
            ghcr.io/josepdcs/kubectl-prof:${{ env.tag }}-jvm-alpine

      - name: Build and Push BPF Agent Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: 'docker/bpf/Dockerfile'
          push: true
          tags: |
            josepdcs/kubectl-prof:${{ env.tag }}-bpf
            ghcr.io/josepdcs/kubectl-prof:${{ env.tag }}-bpf

      - name: Build and Push Python Agent Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: 'docker/python/Dockerfile'
          push: true
          tags: |
            josepdcs/kubectl-prof:${{ env.tag }}-python
            ghcr.io/josepdcs/kubectl-prof:${{ env.tag }}-python

      - name: Build and Push Ruby Agent Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: 'docker/ruby/Dockerfile'
          push: true
          tags: |
            josepdcs/kubectl-prof:${{ env.tag }}-ruby
            ghcr.io/josepdcs/kubectl-prof:${{ env.tag }}-ruby

      - name: Build and Push Perf Agent Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: 'docker/perf/Dockerfile'
          push: true
          tags: |
            josepdcs/kubectl-prof:${{ env.tag }}-perf
            ghcr.io/josepdcs/kubectl-prof:${{ env.tag }}-perf

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.6'

      - name: GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # let's use kustom krew-index after https://github.com/kubernetes-sigs/krew-index/pull/2103
      - name: Update new version in krew-index following to https://krew.sigs.k8s.io/docs/developer-guide/custom-indexes/
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          KREW_VERSION=v0.4.4
          pushd "$(mktemp -d)"
          curl -fsSLO "https://github.com/kubernetes-sigs/krew/releases/download/${KREW_VERSION}/krew.yaml"
          curl -fsSLO "https://github.com/kubernetes-sigs/krew/releases/download/${KREW_VERSION}/krew-linux_amd64.tar.gz"
          tar zxvf krew-linux_amd64.tar.gz
          ./krew-linux_amd64 install --manifest=krew.yaml --archive=krew-linux_amd64.tar.gz
          popd
          export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"
          export TAG=$(tags=$(curl -s --header "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/tags?sort=created&direction=desc" | jq -r '.[].name' | sort -V))
          
          docker run --rm -v ./.krew.yaml:/tmp/template-file.yaml ghcr.io/rajatjindal/krew-release-bot:latest krew-release-bot template --tag ${TAG} --template-file /tmp/template-file.yaml 1> ./plugins/prof.yaml
          go install sigs.k8s.io/krew/cmd/validate-krew-manifest@latest
          ~/go/bin/validate-krew-manifest -manifest ./plugins/prof.yaml
          
          git add plugins
          git commit -m "publish ${TAG} custom krew index" origin

      #- name: Update new version in krew-index
      #  uses: rajatjindal/krew-release-bot@v0.0.46
